@model List<HospitalManagement.ClientApp.Models.Staff>

@{
    ViewData["Title"] = "Staff Management";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <a asp-action="Index" asp-controller="Home" class="btn btn-outline-dark px-4 py-2 fw-semibold">
            <i class="fas fa-home"></i> Back to Home
        </a>
        <div>
            <h2 class="text-secondary text-center"><i class="fas fa-hospital-user"></i> Staff Management</h2>
            <p class="text-muted text-center">Manage hospital staff efficiently including Nurse, Pharmacist, Lab Technician, etc.</p>
        </div>
        <a class="btn btn-secondary shadow-sm" asp-action="Create">
            <i class="fas fa-user-plus"></i> Add New Staff
        </a>
    </div>

    <!-- Total Staff Count -->
    <div class="d-flex justify-content-center mb-3">
        <div class="card shadow-sm border-0 bg-light text-center px-4 py-3" style="max-width: 250px;">
            <h5 class="fw-bold text-info"><i class="fas fa-users"></i> Total Staff</h5>
            <h3 class="fw-bold text-primary mb-0" id="staffCount">@Model.Count</h3>
        </div>
    </div>

    <!-- Search & Filter Section -->
    <div class="row mt-4 mb-3">
        <div class="col-md-6">
            <input type="text" id="searchInput" class="form-control" placeholder="🔍 Search by name">
        </div>
        <div class="col-md-3">
            <select id="positionFilter" class="form-select">
                <option value="">Filter by Position</option>
            </select>
        </div>
        <div class="col-md-3">
            <select id="shiftFilter" class="form-select">
                <option value="">Filter by Shift</option>
                <option value="Morning">Morning</option>
                <option value="Evening">Evening</option>
                <option value="Night">Night</option>
            </select>
        </div>
    </div>

    <!-- Staff List Section -->
    <div class="row" id="staffList">
        @foreach (var staff in Model)
        {
            string shiftIcon = staff.Shift == "Morning" ? "☀️" :
            staff.Shift == "Night" ? "🌙" : "🌆"; // Default Evening Icon

            <div class="col-md-6 col-lg-4 staff-card"
                 data-id="@staff.Id"
                 data-name="@staff.FullName.ToLower()"
                 data-position="@staff.Position"
                 data-shift="@staff.Shift">

                <div class="card shadow-sm mb-4">
                    <div class="card-body">
                        <div class="d-flex align-items-center">
                            <div>
                                <h5 class="mb-1">@staff.FullName</h5>
                                <small class="text-muted"><i class="fas fa-briefcase"></i> @staff.Position</small>
                                <div><i class="fas fa-phone"></i> @staff.ContactNumber</div>
                            </div>
                        </div>

                        <hr>

                        <!-- Additional Fields -->
                        <div><strong>📧 Email:</strong> @staff.Email</div>
                        <div><strong>👤 Gender:</strong> @staff.Gender</div>
                        <div><strong>🎂 Date of Birth:</strong> @staff.DateOfBirth.ToShortDateString()</div>
                        <div><strong>🏠 Address:</strong> @staff.Address</div>
                        <div><strong>🆔 Aadhar Card:</strong> @staff.AdharCard</div>

                        <hr>

                        <div class="d-flex justify-content-between">
                            <span><strong>@shiftIcon @staff.Shift</strong></span>
                            <span><i class="fas fa-money-bill-wave text-success"></i> <strong>@staff.Salary.ToString("C")</strong></span>
                        </div>

                        <div class="mt-3 d-flex justify-content-between">
                            <a class="btn btn-sm btn-outline-primary" asp-action="Details" asp-route-id="@staff.Id">
                                <i class="fas fa-eye"></i>
                            </a>
                            <a class="btn btn-sm btn-outline-warning" asp-action="Edit" asp-route-id="@staff.Id" onclick="saveEditedStaff(@staff.Id)">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@staff.Id"
                               onclick="return confirm('Are you sure you want to delete this staff member?');">
                                <i class="fas fa-trash"></i>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {
        function updatePositionFilter() {
            let positions = new Set();

            // Get positions from all staff (not just visible ones)
            $('.staff-card').each(function () {
                let position = $(this).data('position');
                if (position) {
                    positions.add(position);
                }
            });

            let sortedPositions = Array.from(positions).sort();
            let positionDropdown = $('#positionFilter');

            // Clear and repopulate the dropdown
            positionDropdown.empty();
            positionDropdown.append('<option value="">Filter by Position</option>');

            sortedPositions.forEach(pos => {
                positionDropdown.append(`<option value="${pos}">${pos}</option>`);
            });
        }

        function filterStaff() {
            let searchQuery = $('#searchInput').val().toLowerCase();
            let selectedPosition = $('#positionFilter').val().toLowerCase();
            let selectedShift = $('#shiftFilter').val().toLowerCase();
            let visibleCount = 0;

            $('.staff-card').each(function () {
                let name = $(this).data('name').toLowerCase();
                let position = $(this).data('position').toLowerCase();
                let shift = $(this).data('shift').toLowerCase();

                let matchesSearch = name.includes(searchQuery);
                let matchesPosition = selectedPosition === "" || position === selectedPosition;
                let matchesShift = selectedShift === "" || shift === selectedShift;

                if (matchesSearch && matchesPosition && matchesShift) {
                    $(this).show();
                    visibleCount++;
                } else {
                    $(this).hide();
                }
            });

            $('#staffCount').text(visibleCount);
        }

        $('#searchInput, #positionFilter, #shiftFilter').on('input change', function () {
            filterStaff();
        });

        // Save edited staff ID before editing
        window.saveEditedStaff = function (staffId) {
            localStorage.setItem("editedStaffId", staffId);
        };

        // Highlight last edited staff
        function highlightEditedStaff() {
            let editedStaffId = localStorage.getItem("editedStaffId");
            if (editedStaffId) {
                let editedStaffCard = document.querySelector(`.staff-card[data-id='${editedStaffId}']`);
                if (editedStaffCard) {
                    editedStaffCard.scrollIntoView({ behavior: "smooth", block: "center" });

                    // Highlight effect
                    editedStaffCard.style.transition = "background-color 0.5s ease-in-out";
                    editedStaffCard.style.backgroundColor = "#808080";

                    setTimeout(() => {
                        editedStaffCard.style.backgroundColor = "";
                        localStorage.removeItem("editedStaffId");
                    }, 3000);
                }
            }
        }

        updatePositionFilter(); // Populate dropdown initially
        highlightEditedStaff(); // Highlight last edited staff
    });
</script>
